{"ast":null,"code":"import _classCallCheck from \"/home/aram/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aram/Desktop/calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction () {\n  function Calculator() {\n    _classCallCheck(this, Calculator);\n  }\n\n  _createClass(Calculator, [{\n    key: \"mull\",\n    value: function mull(a, b) {\n      return a * b;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(a, b) {\n      return a - b;\n    }\n  }, {\n    key: \"div\",\n    value: function div(a, b) {\n      return a / b;\n    }\n  }, {\n    key: \"add\",\n    value: function add(a, b) {\n      return a + b;\n    }\n  }, {\n    key: \"calculate\",\n    value: function calculate(a, b, action) {\n      var intA = parseInt(a, 10);\n      var intB = parseInt(b, 10);\n\n      switch (action) {\n        case ACTIONS.ADD:\n          return this.add(intA, intB);\n\n        case ACTIONS.SUB:\n          return this.sub(intA, intB);\n\n        case ACTIONS.DIV:\n          return this.div(intA, intB);\n\n        case ACTIONS.MULL:\n          return this.mull(intA, intB);\n\n        default:\n          break;\n      }\n    }\n  }]);\n\n  return Calculator;\n}();\n\nvar ACTIONS = {\n  MULL: \"*\",\n  DIV: \"/\",\n  SUB: \"-\",\n  ADD: \"+\"\n};\nexport default new Calculator();","map":{"version":3,"sources":["/home/aram/Desktop/calculator/src/services/calculator.js"],"names":["Calculator","a","b","action","intA","parseInt","intB","ACTIONS","ADD","add","SUB","sub","DIV","div","MULL","mull"],"mappings":";;;IAAMA,U;;;;;;;;;yBACGC,C,EAAEC,C,EAAG;AACN,aAAOD,CAAC,GAACC,CAAT;AACH;;;wBACGD,C,EAAEC,C,EAAG;AACL,aAAOD,CAAC,GAACC,CAAT;AACH;;;wBACGD,C,EAAEC,C,EAAG;AACL,aAAOD,CAAC,GAACC,CAAT;AACH;;;wBACGD,C,EAAEC,C,EAAG;AACL,aAAOD,CAAC,GAACC,CAAT;AACH;;;8BACSD,C,EAAEC,C,EAAEC,M,EAAQ;AAClB,UAAMC,IAAI,GAACC,QAAQ,CAACJ,CAAD,EAAG,EAAH,CAAnB;AACA,UAAMK,IAAI,GAACD,QAAQ,CAACH,CAAD,EAAG,EAAH,CAAnB;;AACA,cAAQC,MAAR;AACI,aAAKI,OAAO,CAACC,GAAb;AACI,iBAAO,KAAKC,GAAL,CAASL,IAAT,EAAcE,IAAd,CAAP;;AACH,aAAKC,OAAO,CAACG,GAAb;AACG,iBAAO,KAAKC,GAAL,CAASP,IAAT,EAAcE,IAAd,CAAP;;AACJ,aAAKC,OAAO,CAACK,GAAb;AACI,iBAAO,KAAKC,GAAL,CAAST,IAAT,EAAcE,IAAd,CAAP;;AACJ,aAAKC,OAAO,CAACO,IAAb;AACI,iBAAO,KAAKC,IAAL,CAAUX,IAAV,EAAeE,IAAf,CAAP;;AAEJ;AACI;AAXR;AAaH;;;;;;AAGL,IAAMC,OAAO,GAAC;AACVO,EAAAA,IAAI,EAAE,GADI;AAEVF,EAAAA,GAAG,EAAE,GAFK;AAGVF,EAAAA,GAAG,EAAC,GAHM;AAIVF,EAAAA,GAAG,EAAC;AAJM,CAAd;AAUA,eAAe,IAAIR,UAAJ,EAAf","sourcesContent":["class Calculator {\r\n    mull(a,b) {\r\n        return a*b\r\n    }\r\n    sub(a,b) {\r\n        return a-b\r\n    }\r\n    div(a,b) {\r\n        return a/b\r\n    }\r\n    add(a,b) {\r\n        return a+b\r\n    }\r\n    calculate(a,b,action) {\r\n        const intA=parseInt(a,10);\r\n        const intB=parseInt(b,10);\r\n        switch (action) {\r\n            case ACTIONS.ADD:\r\n                return this.add(intA,intB);\r\n             case ACTIONS.SUB:\r\n                return this.sub(intA,intB);\r\n            case ACTIONS.DIV:\r\n                return this.div(intA,intB);\r\n            case ACTIONS.MULL:\r\n                return this.mull(intA,intB);\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\nconst ACTIONS={\r\n    MULL: \"*\",\r\n    DIV: \"/\",\r\n    SUB:\"-\",\r\n    ADD:\"+\"\r\n}\r\n\r\n\r\n\r\n\r\nexport default new Calculator() "]},"metadata":{},"sourceType":"module"}